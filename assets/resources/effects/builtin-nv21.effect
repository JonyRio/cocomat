
CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture0: { value: white }
        texture1: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  in vec2 a_uv0;
  out vec2 v_uv0;

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    v_uv0 = a_uv0;
    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>

  const mat3 yuv2rgb = mat3(
    1.0,    1.0,     1.0,
    0.0,    -0.344,  1.772,
    1.402,  -0.714,  0.0);

  in vec4 v_color;
  in vec2 v_uv0;

  uniform sampler2D texture0;
  uniform sampler2D texture1;

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    vec3 yuv = vec3(1, 1, 1);

    yuv.x = texture2D(texture0, v_uv0).r;
    yuv.y = texture2D(texture1, v_uv0).a - 0.5;
    yuv.z = texture2D(texture1, v_uv0).r - 0.5;
    
    o.rgb = yuv2rgb * yuv;

    o *= v_color;

    ALPHA_TEST(o);

    gl_FragColor = o;
  }
}%
